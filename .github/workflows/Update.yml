name: 更新规则

on:
  push:
    branches:
      - master
    path:
      - .*
  release:
    types: [published]
  # schedule:
    # - cron: 0 1 * * *
  watch:
    types: [started]

env:
  TZ: Asia/Shanghai
  TELEGRAM_NOTIFICATION: false
  TELEGRAM_NOTIFICATION_CONTENT: <b>ルール更新しました！</b>
  VER: all


jobs:
  UpdateRule:
    if: github.event.repository.owner.id == github.event.sender.id
    runs-on: macos-latest

    steps:
    - name: Checkout
      uses: actions/checkout@master
      with:
        ref: master
        fetch-depth: 0
        lfs: true
    
    - name: Set git identity
      run : |
        git config --global user.email "hououinkami@gmail.com"
        git config --global user.name "hououinkami"
    
    - name: 获取当前日期
      id: date
      run: echo "::set-output name=DATE::$(date +'%Y-%m-%d')"
    
    - name: 获取最新源
      run : |
        wget https://raw.githubusercontent.com/DivineEngine/Profiles/master/Surge/Module/General.sgmodule -O General.tmp
        wget https://raw.githubusercontent.com/DivineEngine/Profiles/master/Surge/Module/Block/Advertising.sgmodule -O Advertising.tmp
        wget https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/Advertising/Advertising_MITM.sgmodule -O all_Advertising.tmp
        wget https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rewrite/Surge/AllInOne/AllInOne_Classical.sgmodule -O all_Rwrite.tmp

    - name: 生成整合规则hostname
      run : |
        awk '
        {
          if($0~/hostname = \%APPEND\%/) {
            gsub("hostname = %APPEND%","   ");
            print $0;
            {exit}; 
          }      
        }
        ' all_Advertising.tmp>all_hostname1.tmp
    
    - name: 生成整合规则Rewrite
      run : |
        awk '
        {
          if($0~/force-http-engine-hosts/) {
            gsub("force-http-engine-hosts = %APPEND% ","");
            print $0;
            {exit};
          }      
        }
        ' all_Rwrite.tmp>all_force-http-engine-hosts2.tmp

        awk '/^(\[)/{f=0} f; /\[Rule\]/{f=1}' all_Rwrite.tmp>tmp.tmp
        awk NF tmp.tmp>all_rule2.tmp

        awk '/^(\[)/{f=0} f; /\[URL Rewrite\]/{f=1}' all_Rwrite.tmp>tmp.tmp
        awk NF tmp.tmp>all_url_rewrite2.tmp

        awk '/^(\[)/{f=0} f; /\[Script\]/{f=1}' all_Rwrite.tmp>tmp.tmp
        awk NF tmp.tmp>all_script2.tmp

        awk '
        {
          if($0~/hostname = \%APPEND\%/) {
            gsub("hostname = %APPEND%","   ");
            print $0;
            {exit}; 
          }      
        }
        ' all_Rwrite.tmp>all_hostname2.tmp

    - name: 生成神机规则General
      run : |
        awk '
        {
          if($0~/always-real-ip = \%APPEND\%/) {
            gsub("always-real-ip = %APPEND%","   ");
            print $0;
            {exit}; 
          }      
        }
        ' General.tmp>realip1.tmp

        awk '/Redirect Google Search Service/{f=1} /^(\[)/{f=0} f' General.tmp>tmp.tmp
        awk NF tmp.tmp>url_rewrite1.tmp

        awk '/^(\[)/{f=0} f; /\[Script\]/{f=1}' General.tmp>tmp.tmp
        awk NF tmp.tmp>script1.tmp

        awk '
        {
          if($0~/hostname = \%APPEND\%/) {
            gsub("hostname = %APPEND%","   ");
            print $0;
            {exit}; 
          }      
        }
        ' General.tmp>hostname1.tmp
    
    - name: 生成神机规则Advertising
      run : |
        awk '
        {
          if($0~/force-http-engine-hosts/) {
            gsub("force-http-engine-hosts = %APPEND% ","");
            print $0;
            {exit};
          }      
        }
        ' Advertising.tmp>force-http-engine-hosts2.tmp

        awk '/^(\[)/{f=0} f; /\[Rule\]/{f=1}' Advertising.tmp>tmp.tmp
        awk NF tmp.tmp>rule2.tmp

        awk '/^(\[)/{f=0} f; /\[URL Rewrite\]/{f=1}' Advertising.tmp>tmp.tmp
        awk NF tmp.tmp>url_rewrite2.tmp

        awk '/^(\[)/{f=0} f; /\[Map Local\]/{f=1}' Advertising.tmp>tmp.tmp
        awk NF tmp.tmp>map_local2.tmp

        awk '
        {
          if($0~/hostname = \%APPEND\%/) {
            gsub("hostname = %APPEND%","   ");
            print $0;
            {exit}; 
          }      
        }
        ' Advertising.tmp>hostname2.tmp

    - name: 合并文件_all
      if: env.VER == 'all' && !cancelled()
      run : |
        cat realip*.tmp > Surge/always-real-ip.tpl
        cat all_force-http-engine-hosts*.tmp > Surge/force-http-engine-hosts.tpl
        cat all_rule*.tmp > Surge/rule.tpl
        cat all_url_rewrite*.tmp > Surge/url_rewrite.tpl
        cat all_script*.tmp > Surge/script.tpl
        cat map_local*.tmp > Surge/map_local.tpl
        awk 'NR==FNR {a[FNR]=$0} NR>FNR {print a[FNR],"'",  "'",$0}' all_hostname*.tmp > Surge/hostname.tpl

    - name: 合并文件_shenji
      if: env.VER == 'shenji' && !cancelled()
      run : |
        cat realip*.tmp > Surge/always-real-ip.tpl
        cat force-http-engine-hosts*.tmp > Surge/force-http-engine-hosts.tpl
        cat rule*.tmp > Surge/rule.tpl
        cat url_rewrite*.tmp > Surge/url_rewrite.tpl
        cat script*.tmp > Surge/script.tpl
        cat map_local*.tmp > Surge/map_local.tpl
        awk 'NR==FNR {a[FNR]=$0} NR>FNR {print a[FNR],"'",  "'",$0}' hostname*.tmp > Surge/hostname.tpl
        
    - name: 删除临时文件
      run : |
        rm *.tmp
        ls
    
    - name: 判断是否有变更
      id: status
      run: |
        STR1="nothing to commit, working tree clean"
        STR2="Changes not staged for commit"
        out=$(git status)
        if [[ "$(echo $out | grep "$STR1")" != "" ]]
        then
          echo "::set-output name=status::"nochange""
        fi
        if [[ "$(echo $out | grep "$STR2")" != "" ]]
        then
          echo "::set-output name=status::"change""
        fi
    
    - name: 合并到仓库
      run : |
        if [[ "${{steps.status.outputs.status}}" == "change" ]]
        then
          git add .
          git commit -m  "Update:${{steps.date.outputs.DATE}}"
          git push origin master
        fi

    - name: 移除workflow运行
      uses: GitRML/delete-workflow-runs@main
      with:
        retain_days: 1
        keep_minimum_runs: 3

    - name: Telegram推送
      if: env.TELEGRAM_NOTIFICATION == 'true' && !cancelled()  
      run: |
        if [[ "${{steps.status.outputs.STATUS}}" == "change" ]]
        then
          curl -s "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage" -d "chat_id=${{ secrets.TELEGRAM_CHAT_ID }}&text=${{ env.TELEGRAM_NOTIFICATION_CONTENT }}&parse_mode=HTML"
        fi
        
