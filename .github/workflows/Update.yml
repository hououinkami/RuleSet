name: 更新规则

on:
  push:
    branches:
      - beta
    path:
      - 'start'
  release:
    types: [published]
  schedule:
    - cron: 0 1 * * *
  watch:
    types: [started]

env:
  TZ: Asia/Shanghai
  TELEGRAM_NOTIFICATION: true
  SOURCE_limbo: https://raw.githubusercontent.com/limbopro/Adblock4limbo/main/Adblock4limbo.list
  SOURCE_limbo_NAME: limbo.list
  SOURCE_antiad: https://anti-ad.net/clash.yaml
  SOURCE_antiad_NAME: antiad.list


jobs:
  GenerateList:
    if: github.event.repository.owner.id == github.event.sender.id
    runs-on: macos-latest

    steps:
    - name: Checkout
      uses: actions/checkout@master
      with:
        ref: master
        fetch-depth: 0
        lfs: true
    
    - name: Set git identity
      run : |
        git config --global user.email "hououinkami@gmail.com"
        git config --global user.name "hououinkami"
    
    - name: 获取当前日期
      id: date
      run: echo "::set-output name=DATE::$(date +'%Y-%m-%d')"
    
    - name: 获取最新源
      run : |
        wget $SOURCE_limbo -O $SOURCE_limbo_NAME
        wget $SOURCE_antiad -O $SOURCE_antiad_NAME
    
    - name: 生成RuleSet_Adblock4limbo
      run : |
        awk '
        {
          if($0~/, reject/) {
            gsub(", reject","");
            print $0;
          };
        }
        ' $SOURCE_limbo_NAME>Adblock4limbo.list
    
    - name: 生成RuleSet_anti-AD
      run : |
        awk '
        {
          gsub(/- '\''\+\./ , "- DOMAIN,");
          gsub(/'\''/ , "");
          print $0;
        }
        ' $SOURCE_antiad_NAME>anti-AD.yaml
    
    - name: 删除临时文件
      run : |
        rm $SOURCE_limbo_NAME
        rm $SOURCE_antiad_NAME
        ls
    
    - name: 判断是否有变更
      id: status
      run: |
        STR1="nothing to commit, working tree clean"
        STR2="Changes not staged for commit"
        out=$(git status)
        if [[ "$(echo $out | grep "$STR1")" != "" ]]
        then
          echo "::set-output name=status::"nochange""
        fi
        if [[ "$(echo $out | grep "$STR2")" != "" ]]
        then
          echo "::set-output name=status::"change""
        fi
    
    - name: 合并到仓库
      run : |
        if [[ "${{steps.status.outputs.status}}" == "change" ]]
        then
          git add .
          git commit -m  "Update:${{steps.date.outputs.DATE}}"
          git push origin master
        fi

    - name: Telegram推送
      if: env.TELEGRAM_NOTIFICATION == 'true' && !cancelled()  
      run: |
        if [[ "${{steps.status.outputs.STATUS}}" == "change" ]]
        then
          curl https://api.telegram.org/bot${{ secrets.TELEGRAM_TOKEN }}/sendmessage?chat_id=${{ secrets.TELEGRAM_TO }}&text=anti-ADルール更新しました！
        fi
        
