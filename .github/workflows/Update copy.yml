name: 更新规则

on:
  push:
    branches:
      - main
    # path:
    #   - .*
  release:
    types: [published]
  schedule:
    - cron: 0 17 * * *
  watch:
    types: [started]

env:
  TZ: Asia/Shanghai
  TELEGRAM_NOTIFICATION: false
  TELEGRAM_NOTIFICATION_CONTENT: <b>ルール更新しました！</b>
  VER: all


jobs:
  UpdateRule:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        ref: main
        fetch-depth: 0
        lfs: true
    
    - name: Set git identity
      run : |
        git config --global user.email "hououinkami@gmail.com"
        git config --global user.name "hououinkami"
    
    - name: 获取当前日期
      id: date
      run: echo "DATE=$(date +'%Y-%m-%d')" >> $GITHUB_OUTPUT
    
    - name: 获取最新源
      run : |
        wget https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/Advertising/Advertising_MITM.sgmodule -O 01_blackmatrix7去广告.sgmodule
        wget https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rewrite/Surge/AllInOne/AllInOne_Mock.sgmodule -O 02_blackmatrix7重写.sgmodule
        wget https://raw.githubusercontent.com/Maasea/sgmodule/master/YoutubeAds.sgmodule -O 03_YouTube增强.sgmodule
        wget https://raw.githubusercontent.com/limbopro/Adblock4limbo/main/Adblock4limbo.sgmodule -O 04Limbo.sgmodule
        wget https://raw.githubusercontent.com/app2smile/rules/master/module/spotify.module -O 05_Spotify破解.sgmodule
        wget https://raw.githubusercontent.com/sunhaoxiang/Surge/main/Module/ZhihuWeb.sgmodule -O 06_知乎Web去广告.sgmodule
        wget https://raw.githubusercontent.com/NobyDa/Script/master/Surge/Module/HuiJuDongManAds.sgmodule -O 07_荟聚动漫.sgmodule

        wget https://raw.githubusercontent.com/dler-io/Rules/main/Surge/Surge%203/Head.conf -O 01_DlerCloud_Head.conf
        wget https://raw.githubusercontent.com/dler-io/Rules/main/Surge/Surge%203/Rule.conf -O 02_DlerCloud_Rule.conf
        wget https://raw.githubusercontent.com/DivineEngine/Profiles/master/Surge/Outbound.conf -O 03_神机.conf

    # 示例
    # awk '/^(终止行起始字段)/{f=0} f; /起始行关键字/{f=1}' $module>tmp.tmp
    # 过滤空白行
    # awk NF tmp.tmp>rule2.tmp

    - name: 模块整合
      run : |
        num=0
        for module in *.sgmodule
        do
          num=`expr $num + 1`

          # force-http-engine-hosts
          awk '
          {
            if($0~/force-http-engine-hosts = %APPEND%/) {
              gsub("force-http-engine-hosts = %APPEND% ","");
              print $0 ",";
              {exit};
            }      
          }
          ' $module>force-http-engine-hosts_$num.tmp 
          
          # Rule
          awk '/^(\[)/{f=0} f; /\[Rule\]/{f=1}' $module>tmp.tmp
          awk NF tmp.tmp>rule_$num.tmp
          
          # Header Rewrite
          awk '/^(\[)/{f=0} f; /\[Header Rewrite\]/{f=1}' $module>tmp.tmp
          awk NF tmp.tmp>header_rewrite_$num.tmp
          sed -i '1i\# > $module' header_rewrite_$num.tmp

          # URL Rewrite
          awk '/^(\[)/{f=0} f; /\[URL Rewrite\]/{f=1}' $module>tmp.tmp
          awk '
          {
            if($0!~/imgextra|m.baidu.com 302/) {
              print $0;
            }      
          }
          ' tmp.tmp>tmp2.tmp
          awk NF tmp2.tmp>url_rewrite_$num.tmp
          sed -i '1i\# > $module' url_rewrite_$num.tmp
          
          # Map Local
          awk '/^(\[)/{f=0} f; /\[Map Local\]/{f=1}' $module>tmp.tmp
          awk NF tmp.tmp>map_local_$num.tmp
          
          # Script
          awk '/^(\[)/{f=0} f; /\[Script\]/{f=1}' $module>tmp.tmp
          awk NF tmp.tmp>script_$num.tmp
          sed -i '1i\# > $module' script_$num.tmp

          # hostname
          awk '
          {
            if($0~/hostname = %APPEND%/) {
              gsub("hostname = %APPEND%","");
              print $0 ",";
              {exit}; 
            }      
          }
          ' $module>tmp.tmp
          awk '{if(NR%3!=0)ORS=" ";else ORS="\n "}1' tmp.tmp > hostname_$num.tmp
          sed -i 's/^/$module, &/g' hostname_$num.tmp
        done
        
    - name: 配置整合
      run : |
        num=0
        for conf in *.conf
        do
          num=`expr $num + 1`

          # skip-proxy
          awk '
          {
            if($0~/skip-proxy = /) {
              gsub("skip-proxy = ","");
              print $0 ",";
              {exit}; 
            }      
          }
          ' $conf>skip-proxy_$num.tmp

          # always-real-ip
          awk '
          {
            if($0~/always-real-ip = /) {
              gsub("always-real-ip = ","");
              print $0 ",";
              {exit}; 
            }      
          }
          ' $conf>realip_$num.tmp

          # Host
          awk '/^(\[)/{f=0} f; /\[Host\]/{f=1}' $conf>tmp.tmp
          awk '
          {
            if($0~/# >/ || $0~/=/) {
              if($0!~/hostname/) {
                print $0;
              }
            }      
          }
          ' tmp.tmp>tmp2.tmp
          awk NF tmp2.tmp > host_$num.tmp
        done

    - name: 合并文件_all
      if: env.VER == 'all' && !cancelled()
      run : |
        cat skip-proxy*.tmp > skip_proxy.tmp
        awk '{if(NR%3!=0)ORS=" ";else ORS="\n "}1' skip_proxy.tmp > template/snippet/Surge/skip_proxy.tpl
        cat realip*.tmp > always_real_ip.tmp
        awk '{if(NR%3!=0)ORS=" ";else ORS="\n "}1' always_real_ip.tmp > template/snippet/Surge/always_real_ip.tpl
        cat force-http-engine-hosts*.tmp > force-http-engine-hosts.tmp
        awk '{if(NR%3!=0)ORS=" ";else ORS="\n "}1' force-http-engine-hosts.tmp > template/snippet/Surge/force_http_engine_hosts.tpl
        cat host_*.tmp > template/snippet/Surge/host.tpl
        cat rule*.tmp > template/snippet/Surge/rule.tpl
        cat url_rewrite*.tmp > template/snippet/Surge/url_rewrite.tpl
        cat header_rewrite.tmp > template/snippet/Surge/header_rewrite.tpl
        cat script*.tmp > template/snippet/Surge/script.tpl
        cat map_local*.tmp > template/snippet/Surge/map_local.tpl
        cat hostname*.tmp > hostname.tmp
        awk '{if(NR%3!=0)ORS=" ";else ORS="\n "}1' hostname.tmp > template/snippet/Surge/hostname.tpl

    - name: 删除临时文件
      if: (!cancelled())
      run : |
        rm *.tmp *.sgmodule *.conf
        ls
    
    - name: 判断是否有变更
      if: (!cancelled())
      id: status
      run: |
        STR1="nothing to commit, working tree clean"
        STR2="Changes not staged for commit"
        out=$(git status)
        if [[ "$(echo $out | grep "$STR1")" != "" ]]
        then
          echo "status="nochange"" >> $GITHUB_OUTPUT
        fi
        if [[ "$(echo $out | grep "$STR2")" != "" ]]
        then
          echo "status="change"" >> $GITHUB_OUTPUT
        fi
    
    - name: 合并到仓库
      if: (!cancelled())
      run : |
        if [[ "${{steps.status.outputs.status}}" == "change" ]]
        then
          git add .
          git commit -m  "Update:${{steps.date.outputs.DATE}}"
          git push origin main
        fi

    - name: 移除workflow运行
      if: (!cancelled())
      uses: GitRML/delete-workflow-runs@main
      with:
        retain_days: 1
        keep_minimum_runs: 3

    - name: Telegram推送
      if: env.TELEGRAM_NOTIFICATION == 'true' && !cancelled()  
      run: |
        if [[ "${{steps.status.outputs.STATUS}}" == "change" ]]
        then
          curl -s "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage" -d "chat_id=${{ secrets.TELEGRAM_CHAT_ID }}&text=${{ env.TELEGRAM_NOTIFICATION_CONTENT }}&parse_mode=HTML"
        fi
        
